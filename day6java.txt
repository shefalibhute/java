multitasking:-1.multiprocessing
	    2.multithreading

Runnable interface:-has class Thread.

1.class MyThread extends Thread
{
	public void run()      //run method:-what the thread will do is written here
{
}
}

	OR
2.class MyThread implements Runnable
{
	public void run()
{
}
}
------------------------------------------------------------------------------
package day6;

public class MyThread extends Thread
{
	public MyThread ()
	{
		setName("t1");
		start();
	}
	
@Override
public void run() 
{
	System.out.println("hello pooja");
	
}
public static void main(String[] args) {
	new MyThread();
}
---------------------------------------------------
package day6;

public class MyThread extends Thread
{
	public MyThread ()
	{
		
	}
	
@Override
public void run() 
{
	System.out.println("hello pooja");
	
}
public static void main(String[] args) {
	MyThread m=new MyThread();
	m.setName("t1");
	m.setPriority(Thread.NORM_PRIORITY);
	m.start();
	System.out.println(m.getPriority());
}
}
--------------------------------------------------
package day6;

public class Thread1 implements Runnable {

	@Override
	public void run() {
		System.out.println("hi...");

	}
public static void main(String[] args) {
	Runnable t=new Thread1();
	Thread t1=new Thread(t);
	t1.setName("t");
	t1.start();
}
}
----------------------------------
JOIN:-which thread u want to call fst, use join fr dat




















